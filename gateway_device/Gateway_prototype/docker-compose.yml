
services:
  # Service 1: The Python script
  ble_listener:
    build: .
    image: group11-listener-influx
    restart: always
    # Required for BLE access on the Pi
    network_mode: "host"
    volumes:
      - /var/run/dbus:/var/run/dbus
    privileged: true
    depends_on:
      - influxdb
    # Pass InfluxDB credentials to the Python script
    environment:
      - INFLUXDB_URL=http://127.0.0.1:8086
      - INFLUXDB_TOKEN=admin-token
      - INFLUXDB_ORG=default-org
      - INFLUXDB_BUCKET=default-bucket

  # Service 2: The InfluxDB database
  influxdb:
    image: influxdb:2.7 # Official multi-arch image
    restart: always
    ports:
      - "8086:8086"
    # Using a default anonymous volume for data persistence
    volumes:
      - /var/lib/influxdb2
    networks:
      - monitoring_net
    # Environment variables to auto-initialize the database
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=default-org
      - DOCKER_INFLUXDB_INIT_BUCKET=default-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin-token

  # Service 3: The Grafana dashboard
  grafana:
    image: grafana/grafana-oss:latest # Official multi-arch image
    restart: always
    ports:
      - "3000:3000"
    # Using a default anonymous volume for data persistence
    volumes:
      - /var/lib/grafana
      # This volume provisions the data source automatically
      - ./grafana-provisioning:/etc/grafana/provisioning
    networks:
      - monitoring_net
    depends_on:
      - influxdb
    # Default Grafana login is admin / admin
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

# Define the private network for InfluxDB and Grafana
networks:
  monitoring_net:

